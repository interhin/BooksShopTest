{"version":3,"sources":["components/shop-header/index.js","components/shop-header/shop-header.js","components/book-list-item/index.js","components/book-list-item/book-list-item.js","components/bookstore-service-context/bookstore-service-context.js","components/hoc/with-bookstore-service.js","actions/index.js","utils/compose.js","components/spinner/index.js","components/spinner/spinner.js","components/error-indicator/index.js","components/error-indicator/error-indicator.js","components/book-list/book-list.js","components/book-list/index.js","components/shopping-cart-table/shopping-cart-table.js","components/pages/home-page.js","components/shopping-cart-table/index.js","components/pages/cart-page.js","components/book-modal/book-modal.js","components/book-modal/index.js","components/app/index.js","components/app/app.js","components/error-boundry/index.js","components/error-boundry/error-boundry.js","reducers/index.js","store.js","index.js","services/bookstore-service.js"],"names":["ShopHeader","connect","_ref2","total","orderTotal","numItems","orderCount","_ref","react_default","a","createElement","className","Link","to","toFixed","BookListItem","book","onModalOpenned","title","price","image","src","alt","onClick","React","createContext","BookstoreServiceProvider","Provider","BookstoreServiceConsumer","Consumer","withBookstoreService","Wrapped","props","bookstoreService","Object","assign","bookAddedToCart","bookId","count","type","payload","fetchBooks","dispatch","getBooks","then","data","catch","err","compose","_len","arguments","length","funcs","Array","_key","comp","reduceRight","wrapped","f","Spinner","ErrorIndicator","BookList","books","modalOpenned","map","key","id","components_book_list_item","BookListContainer","this","_this$props","loading","error","components_spinner","components_error_indicator","book_list_BookList","Component","isModal","_ref3","onAddedToCart","items","cartItems","onIncrease","onDecrease","onDelete","item","idx","HomePage","components_book_list","shopping_cart_table_shopping_cart_table","ShoppingCartTable","CartPage","components_shopping_cart_table","BookModal","modalClosed","currentBook","currentCount","bookCountChanged","Fragment","Modal","show","onHide","Header","closeButton","Title","Body","subtitle","react_numeric_input_default","min","value","onChange","Footer","Button","variant","App","role","components_shop_header","Switch","Route","path","component","exact","components_book_modal","ErrorBoundry","state","hasError","setState","children","initialState","updateOrder","quantity","find","itemIndex","findIndex","updatedCartItems","concat","toConsumableArray","slice","updateCartItems","undefined","_item$id","_item$count","_item$title","_item$total","updateCartItem","reduce","acc","cur","objectSpread","reducer","action","curBook","store","createStore","_callee","res","json","regenerator_default","wrap","_context","prev","next","fetch","sent","abrupt","_this","mapResToBook","stop","isbn13","url","ReactDOM","render","es","error_boundry","BrowserRouter","components_app","document","getElementById"],"mappings":"qYAEeA,EC0BAC,YAPS,SAAAC,GACtB,MAAO,CACLC,MAFoDD,EAA7BE,WAGvBC,SAHoDH,EAAjBI,aAOxBL,CAvBI,SAAAM,GAAyB,IAAtBF,EAAsBE,EAAtBF,SAAUF,EAAYI,EAAZJ,MAC9B,OACEK,EAAAC,EAAAC,cAAA,UAAQC,UAAU,mBAChBH,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAMC,GAAG,KACPL,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBAAf,eAEFH,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAMC,GAAG,SACPL,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACbH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,kCACZN,EAFH,YAEsBF,EAAMW,QAAQ,GAFpC,iDCVOC,SCCM,SAAAR,GAA8B,IAA3BS,EAA2BT,EAA3BS,KAAMC,EAAqBV,EAArBU,eACpBC,EAAwBF,EAAxBE,MAAOC,EAAiBH,EAAjBG,MAAOC,EAAUJ,EAAVI,MACtB,OACEZ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACbH,EAAAC,EAAAC,cAAA,OAAKW,IAAKD,EAAOE,IAAI,WAEvBd,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACbH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,cAAcO,GAC9BV,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cAAf,IAA8BQ,GAC9BX,EAAAC,EAAAC,cAAA,UACEa,QAASN,EACTN,UAAU,4BAFZ,8CCRJa,IAAMC,gBAFEC,IAAVC,SACUC,IAAVC,SCeaC,EAhBc,kBAAM,SAACC,GAElC,OAAO,SAACC,GACN,OACExB,EAAAC,EAAAC,cAACkB,EAAD,KAEI,SAACK,GACC,OAAQzB,EAAAC,EAAAC,cAACqB,EAADG,OAAAC,OAAA,GAAaH,EAAb,CACCC,iBAAkBA,UCU1BG,EAAkB,SAACC,EAAQC,GACtC,MAAO,CACLC,KAAM,qBACNC,QAAS,CAAEH,SAAQC,WAkBVG,EAAa,SAACR,EAAkBS,GAAnB,OAAgC,WACxDA,EAzCO,CACLH,KAAM,wBAyCRN,EAAiBU,WACdC,KAAK,SAACC,GAAD,OAAUH,EArCX,CACLH,KAAM,sBACNC,QAmCqCK,MACpCC,MAAM,SAACC,GAAD,OAASL,EA/BX,CACLH,KAAM,sBACNC,QA6BoCO,QCzCzBC,EALC,mBAAAC,EAAAC,UAAAC,OAAIC,EAAJ,IAAAC,MAAAJ,GAAAK,EAAA,EAAAA,EAAAL,EAAAK,IAAIF,EAAJE,GAAAJ,UAAAI,GAAA,OAAc,SAACC,GAC7B,OAAOH,EAAMI,YACX,SAACC,EAASC,GAAV,OAAgBA,EAAED,IAAUF,KCAjBI,SCCC,WACd,OACEnD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eCJNiD,SCCQ,WACrB,OAAOpD,EAAAC,EAAAC,cAAA,uBCUHmD,SAAW,SAAAtD,GAA6B,IAA1BuD,EAA0BvD,EAA1BuD,MAAOC,EAAmBxD,EAAnBwD,aACzB,OACEvD,EAAAC,EAAAC,cAAA,MAAIC,UAAU,aAEVmD,EAAME,IAAI,SAAChD,GACT,OACER,EAAAC,EAAAC,cAAA,MAAIuD,IAAKjD,EAAKkD,IACZ1D,EAAAC,EAAAC,cAACyD,EAAD,CACEnD,KAAMA,EACNC,eAAgB,kBAAM8C,EAAa/C,EAAKkD,aASlDE,8LAGFC,KAAKrC,MAAMS,8CAGJ,IAAA6B,EACyCD,KAAKrC,MAA7C8B,EADDQ,EACCR,MAAOS,EADRD,EACQC,QAASC,EADjBF,EACiBE,MAAOT,EADxBO,EACwBP,aAE/B,OAAIQ,EACK/D,EAAAC,EAAAC,cAAC+D,EAAD,MAGLD,EACKhE,EAAAC,EAAAC,cAACgE,EAAD,MAGFlE,EAAAC,EAAAC,cAACiE,EAAD,CAAUb,MAAOA,EAAOC,aAAcA,WAjBjBa,aC9BjBf,ED+DAb,EACblB,IACA7B,YAdsB,SAAAC,GACtB,MAAO,CAAE4D,MADqD5D,EAArC4D,MACTS,QAD8CrE,EAA9BqE,QACPC,MADqCtE,EAArBsE,MACTK,QAD8B3E,EAAd2E,UAIvB,SAACnC,EAADoC,GAAoC,IAAvB7C,EAAuB6C,EAAvB7C,iBACtC,MAAO,CACLQ,WAAYA,EAAWR,EAAkBS,GACzCqC,cAAe,SAACb,GAAD,OAAQxB,EAASN,EAAgB8B,KAChDH,aAAc,SAACG,GAAD,OAAQxB,ENXjB,CACLH,KAAM,gBACNC,QMS4C0B,QAIjClB,CAGboB,GEaanE,qBAfS,SAAAC,GACtB,MAAO,CACL8E,MAFmD9E,EAA5B+E,UAGvB9E,MAHmDD,EAAjBE,aAOX,SAACsC,GAC1B,MAAO,CACLwC,WAAY,SAAChB,GAAD,OAAQxB,EAASN,EAAgB8B,EAAI,KACjDiB,WAAY,SAACjB,GAAD,OAAQxB,ER/Cf,CACLH,KAAM,yBACNC,QQ6CiD0B,KACjDkB,SAAU,SAAClB,GAAD,OAAQxB,ERzCb,CACLH,KAAM,8BACNC,QQuCmD0B,OAIxCjE,CAvEW,SAAAM,GAAwD,IAArDyE,EAAqDzE,EAArDyE,MAAO7E,EAA8CI,EAA9CJ,MAAO+E,EAAuC3E,EAAvC2E,WAAYC,EAA2B5E,EAA3B4E,WAAYC,EAAe7E,EAAf6E,SA8BjE,OACE5E,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uBACbH,EAAAC,EAAAC,cAAA,wDACAF,EAAAC,EAAAC,cAAA,SAAOC,UAAU,SACfH,EAAAC,EAAAC,cAAA,aACEF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,eACAF,EAAAC,EAAAC,cAAA,8DACAF,EAAAC,EAAAC,cAAA,0EACAF,EAAAC,EAAAC,cAAA,sCACAF,EAAAC,EAAAC,cAAA,gEAIJF,EAAAC,EAAAC,cAAA,aACEsE,EAAMhB,IA5CI,SAACqB,EAAMC,GAAQ,IACvBpB,EAA4BmB,EAA5BnB,GAAIhD,EAAwBmE,EAAxBnE,MAAOoB,EAAiB+C,EAAjB/C,MAAOnC,EAAUkF,EAAVlF,MAC1B,OACEK,EAAAC,EAAAC,cAAA,MAAIuD,IAAKC,GACP1D,EAAAC,EAAAC,cAAA,UAAK4E,EAAM,GACX9E,EAAAC,EAAAC,cAAA,UAAKQ,GACLV,EAAAC,EAAAC,cAAA,UAAK4B,GACL9B,EAAAC,EAAAC,cAAA,cAAMP,EAAMW,QAAQ,IACpBN,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,UACEa,QAAS,kBAAM6D,EAASlB,IACxBvD,UAAU,6CACVH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,mBAEfH,EAAAC,EAAAC,cAAA,UACEa,QAAS,kBAAM2D,EAAWhB,IAC1BvD,UAAU,8CACVH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,uBAEfH,EAAAC,EAAAC,cAAA,UACEa,QAAS,kBAAM4D,EAAWjB,IAC1BvD,UAAU,8CACVH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,8BA0BnBH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SAAf,oCACWR,EAAMW,QAAQ,QC/ChByE,EATE,WACf,OACE/E,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAC8E,EAAD,MACAhF,EAAAC,EAAAC,cAAC+E,EAAD,QCNSC,ICKAC,EAJE,WACf,OAAOnF,EAAAC,EAAAC,cAACkF,EAAD,0CCQHC,0LAEO,IAAAvB,EAC0FD,KAAKrC,MAA5F6C,EADHP,EACGO,QAASiB,EADZxB,EACYwB,YAAaC,EADzBzB,EACyByB,YAAaC,EADtC1B,EACsC0B,aAAc5D,EADpDkC,EACoDlC,gBAAiB6D,EADrE3B,EACqE2B,iBAC1E,OACIzF,EAAAC,EAAAC,cAAAF,EAAAC,EAAAyF,SAAA,KACI1F,EAAAC,EAAAC,cAACyF,EAAA,EAAD,CAAOC,KAAMvB,EAASwB,OAAQP,GAC1BtF,EAAAC,EAAAC,cAACyF,EAAA,EAAMG,OAAP,CAAcC,aAAW,GACzB/F,EAAAC,EAAAC,cAACyF,EAAA,EAAMK,MAAP,KAAcT,EAAY7E,QAE1BV,EAAAC,EAAAC,cAACyF,EAAA,EAAMM,KAAP,CAAY9F,UAAU,mBAClBH,EAAAC,EAAAC,cAAA,OAAKW,IAAK0E,EAAY3E,MAAOE,IAAKyE,EAAY7E,QAC9CV,EAAAC,EAAAC,cAAA,SAAIqF,EAAYW,UAChBlG,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACXH,EAAAC,EAAAC,cAACiG,EAAAlG,EAAD,CAAcmG,IAAK,EAAGC,MAAOb,EAAcc,SAAU,SAACxE,GAAD,OAAW2D,EAAiB3D,MACjF9B,EAAAC,EAAAC,cAAA,uGAGRF,EAAAC,EAAAC,cAACyF,EAAA,EAAMY,OAAP,KACAvG,EAAAC,EAAAC,cAACsG,EAAA,EAAD,CAAQC,QAAQ,UAAU1F,QAAS,kBAAKa,EAAgB2D,EAAY7B,GAAI8B,KAAxE,sGAGAxF,EAAAC,EAAAC,cAACsG,EAAA,EAAD,CAAQC,QAAQ,YAAY1F,QAASuE,GAArC,wDAtBIlB,cCXTuB,ED8DAlG,YAnBS,SAAAM,GACpB,MAAO,CACHsE,QAF4DtE,EAAzCsE,QAGnBkB,YAH4DxF,EAAhCwF,YAI5BC,aAJ4DzF,EAAnByF,eAQtB,SAACtD,GACxB,MAAO,CACHoD,YAAa,kBAAMpD,EZGlB,CACLH,KAAM,kBYHFH,gBAAiB,SAAC8B,EAAI5B,GAClBI,EAASN,EAAgB8B,EAAI5B,IAC7BI,EZAH,CACLH,KAAM,kBYCF0D,iBAAkB,SAAC3D,GAAD,OAAWI,EZGL,SAACJ,GAC/B,MAAO,CACLC,KAAM,qBACNC,QAASF,GYNiC2D,CAAiB3D,OAIhDrC,CAA4C4F,GE7D5CqB,SCMH,WACV,OACE1G,EAAAC,EAAAC,cAAA,QAAMyG,KAAK,OAAOxG,UAAU,aAC1BH,EAAAC,EAAAC,cAAC0G,EAAD,CAAY/G,SAAU,EAAGF,MAAO,MAChCK,EAAAC,EAAAC,cAAC2G,EAAA,EAAD,KACE7G,EAAAC,EAAAC,cAAC4G,EAAA,EAAD,CACEC,KAAK,iBACLC,UAAWjC,EACXkC,OAAK,IAEPjH,EAAAC,EAAAC,cAAC4G,EAAA,EAAD,CACEC,KAAK,sBACLC,UAAW7B,KAGfnF,EAAAC,EAAAC,cAACgH,EAAD,SCrBSC,6MCGbC,MAAQ,CACNC,UAAU,sFAIVxD,KAAKyD,SAAS,CAAED,UAAU,qCAI1B,OAAIxD,KAAKuD,MAAMC,SACNrH,EAAAC,EAAAC,cAACgE,EAAD,MAGFL,KAAKrC,MAAM+F,gBAfoBnD,8DCFpCoD,EAAe,CACnBlE,MAAO,GACPS,SAAS,EACTC,MAAO,KACPS,UAAW,GACX7E,WAAY,EACZE,WAAY,EACZuE,SAAS,EACTkB,YAAa,GACbC,aAAc,GAoDViC,EAAc,SAACL,EAAOvF,EAAQ6F,GAAa,IACvCpE,EAAqB8D,EAArB9D,MAAOmB,EAAc2C,EAAd3C,UAGTjE,EAAO8C,EAAMqE,KAAK,SAAA5H,GAAA,OAAAA,EAAE2D,KAAe7B,IACnC+F,EAAYnD,EAAUoD,UAAU,SAAAnI,GAAA,OAAAA,EAAEgE,KAAe7B,IAKjDiG,EAzDgB,SAACrD,EAAWI,EAAMC,GAExC,OAAmB,IAAfD,EAAK/C,MACP,GAAAiG,OAAArG,OAAAsG,EAAA,EAAAtG,CACK+C,EAAUwD,MAAM,EAAGnD,IADxBpD,OAAAsG,EAAA,EAAAtG,CAEK+C,EAAUwD,MAAMnD,EAAM,MAIhB,IAATA,EACF,GAAAiD,OAAArG,OAAAsG,EAAA,EAAAtG,CACK+C,GADL,CAEEI,IAIJ,GAAAkD,OAAArG,OAAAsG,EAAA,EAAAtG,CACK+C,EAAUwD,MAAM,EAAGnD,IADxB,CAEED,GAFFnD,OAAAsG,EAAA,EAAAtG,CAGK+C,EAAUwD,MAAMnD,EAAM,KAsCFoD,CAAgBzD,EA9BpB,SAACjE,GAA8B,IAAxBqE,EAAwBnC,UAAAC,OAAA,QAAAwF,IAAAzF,UAAA,GAAAA,UAAA,GAAjB,GAAIgF,EAAahF,UAAAC,OAAA,EAAAD,UAAA,QAAAyF,EAAAC,EAQpCvD,EAHdnB,UALkD,IAAA0E,EAK7C5H,EAAKkD,GALwC0E,EAAAC,EAQpCxD,EAFd/C,aANkD,IAAAuG,EAM1C,EAN0CA,EAAAC,EAQpCzD,EADdnE,aAPkD,IAAA4H,EAO1C9H,EAAKE,MAPqC4H,EAAAC,EAQpC1D,EAAdlF,MAGF,MAAO,CACL+D,KACAhD,QACAoB,MAAOA,EAAQ4F,EACf/H,YAfkD,IAAA4I,EAQ1C,EAR0CA,GAenCb,EAASlH,EAAKG,OAcf6H,CAAehI,EAHlBiE,EAAUmD,GAGoBF,GACkBE,GAGvDhI,EAAakI,EAAiBW,OAAO,SAACC,EAAIC,GAAL,OAAWD,EAAIC,EAAIhJ,OAAM,GAC9DG,EAAagI,EAAiBW,OAAO,SAACC,EAAIC,GAAL,OAAWD,EAAIC,EAAI7G,OAAM,GAEpE,OAAOJ,OAAAkH,EAAA,EAAAlH,CAAA,GACF0F,EADL,CAEE3C,UAAWqD,EACXlI,aACAE,gBAoEW+I,EAhEC,WAAkC,IAAjCzB,EAAiC1E,UAAAC,OAAA,QAAAwF,IAAAzF,UAAA,GAAAA,UAAA,GAAzB8E,EAAcsB,EAAWpG,UAAAC,OAAA,EAAAD,UAAA,QAAAyF,EAEhD,OAAQW,EAAO/G,MACb,IAAK,sBACH,OAAOL,OAAAkH,EAAA,EAAAlH,CAAA,GACF0F,EADL,CAEE9D,MAAO,GACPS,SAAS,EACTC,MAAO,OAGX,IAAK,sBACH,OAAOtC,OAAAkH,EAAA,EAAAlH,CAAA,GACF0F,EADL,CAEE9D,MAAOwF,EAAO9G,QACd+B,SAAS,EACTC,MAAO,OAGX,IAAK,sBACH,OAAOtC,OAAAkH,EAAA,EAAAlH,CAAA,GACF0F,EADL,CAEE9D,MAAO,GACPS,SAAS,EACTC,MAAO8E,EAAO9G,UAGlB,IAAK,qBACH,OAAOyF,EAAYL,EAAO0B,EAAO9G,QAAQH,OAAQiH,EAAO9G,QAAQF,OAElE,IAAK,yBACH,OAAO2F,EAAYL,EAAO0B,EAAO9G,SAAU,GAE7C,IAAK,8BACH,IAAM6C,EAAOuC,EAAM3C,UAAUkD,KAAK,SAAArD,GAAA,OAAAA,EAAEZ,KAAeoF,EAAO9G,UAC1D,OAAOyF,EAAYL,EAAO0B,EAAO9G,SAAU6C,EAAK/C,OAElD,IAAK,gBACH,IAAMiH,EAAU3B,EAAM9D,MAAMqE,KAAK,SAACnH,GAAD,OAASA,EAAKkD,KAAOoF,EAAO9G,UAC7D,OAAON,OAAAkH,EAAA,EAAAlH,CAAA,GACF0F,EADL,CAEE/C,SAAS,EACTkB,YAAawD,IAGjB,IAAK,eACH,OAAOrH,OAAAkH,EAAA,EAAAlH,CAAA,GACF0F,EADL,CAEE/C,SAAS,EACTkB,YAAa,GACbC,aAAc,IAGlB,IAAK,qBACH,OAAO9D,OAAAkH,EAAA,EAAAlH,CAAA,GACF0F,EADL,CAEE5B,aAAcsD,EAAO9G,UAGzB,QACE,OAAOoF,IC5IE4B,EAFDC,YAAYJ,GCQpBpH,EAAmB,qDCTvBU,8BAAW,SAAA+G,IAAA,IAAAC,EAAAC,EAAA,OAAAC,EAAApJ,EAAAqJ,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACSC,MAAM,4DADf,cACHP,EADGI,EAAAI,KAAAJ,EAAAE,KAAA,EAEUN,EAAIC,OAFd,cAEHA,EAFGG,EAAAI,KAAAJ,EAAAK,OAAA,SAGFR,EAAK9F,MAAME,IAAIqG,EAAKC,eAHlB,wBAAAP,EAAAQ,SAAAb,WAMXY,aAAe,SAACtJ,GACd,MAAO,CACLkD,GAAIlD,EAAKwJ,OACTtJ,MAAOF,EAAKE,MACZE,MAAOJ,EAAKI,MACZD,MAAOH,EAAKG,MACZuF,SAAU1F,EAAK0F,SACf+D,IAAKzJ,EAAKyJ,ODFhBC,IAASC,OACPnK,EAAAC,EAAAC,cAACkK,EAAA,EAAD,CAAUpB,MAAOA,GACfhJ,EAAAC,EAAAC,cAACmK,EAAD,KACErK,EAAAC,EAAAC,cAACgB,EAAD,CAA0BmF,MAAO5E,GAC/BzB,EAAAC,EAAAC,cAACoK,EAAA,EAAD,KACEtK,EAAAC,EAAAC,cAACqK,EAAD,UAKRC,SAASC,eAAe","file":"static/js/main.01cdc500.chunk.js","sourcesContent":["import ShopHeader from './shop-header';\n\nexport default ShopHeader;","import React from 'react';\nimport './shop-header.css';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nconst ShopHeader = ({ numItems, total }) => {\n  return (\n    <header className=\"shop-header row\">\n      <Link to=\"/\">\n        <div className=\"logo text-dark\">Books Shop</div>\n      </Link>\n      <Link to=\"/cart\">\n        <div className=\"shopping-cart\">\n          <i className=\"cart-icon fa fa-shopping-cart\" />\n          {numItems} Books (${total.toFixed(2)})\n        </div>\n      </Link>\n    </header>\n  );\n};\n\nconst mapStateToProps = ({ orderTotal, orderCount }) => {\n  return {\n    total: orderTotal,\n    numItems: orderCount\n  }\n};\n\nexport default connect(mapStateToProps)(ShopHeader);\n","import BookListItem from './book-list-item';\n\nexport default BookListItem;\n","import React from 'react';\nimport './book-list-item.css';\n\nconst BookListItem = ({ book, onModalOpenned }) => {\n  const { title, price, image } = book;\n  return (\n    <div className=\"book-list-item\">\n      <div className=\"book-cover\">\n        <img src={image} alt=\"cover\" />\n      </div>\n      <div className=\"book-details\">\n        <span className=\"book-title\">{title}</span>\n        <div className=\"book-price\">${price}</div>\n        <button\n          onClick={onModalOpenned}\n          className=\"btn btn-info add-to-cart\">\n          Купить\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default BookListItem;\n","import React from 'react';\n\nconst {\n  Provider: BookstoreServiceProvider,\n  Consumer: BookstoreServiceConsumer\n} = React.createContext();\n\nexport {\n  BookstoreServiceProvider,\n  BookstoreServiceConsumer\n};\n","import React from 'react';\nimport { BookstoreServiceConsumer } from '../bookstore-service-context';\n\nconst withBookstoreService = () => (Wrapped) => {\n\n  return (props) => {\n    return (\n      <BookstoreServiceConsumer>\n        {\n          (bookstoreService) => {\n            return (<Wrapped {...props}\n                     bookstoreService={bookstoreService}/>);\n          }\n        }\n      </BookstoreServiceConsumer>\n    );\n  }\n};\n\nexport default withBookstoreService;\n","\nconst booksRequested = () => {\n  return {\n    type: 'FETCH_BOOKS_REQUEST'\n  }\n};\n\nconst booksLoaded = (newBooks) => {\n  return {\n    type: 'FETCH_BOOKS_SUCCESS',\n    payload: newBooks\n  };\n};\n\nconst booksError = (error) => {\n  return {\n    type: 'FETCH_BOOKS_FAILURE',\n    payload: error\n  };\n};\n\nexport const bookAddedToCart = (bookId, count) => {\n  return {\n    type: 'BOOK_ADDED_TO_CART',\n    payload: { bookId, count }\n  };\n};\n\nexport const bookRemovedFromCart = (bookId) => {\n  return {\n    type: 'BOOK_REMOVED_FROM_CART',\n    payload: bookId\n  };\n};\n\nexport const allBooksRemovedFromCart = (bookId) => {\n  return {\n    type: 'ALL_BOOKS_REMOVED_FROM_CART',\n    payload: bookId\n  };\n};\n\nexport const fetchBooks = (bookstoreService, dispatch) => () => {\n  dispatch(booksRequested());\n  bookstoreService.getBooks()\n    .then((data) => dispatch(booksLoaded(data)))\n    .catch((err) => dispatch(booksError(err)));\n};\n\nexport const modalOpenned = (bookId) => {\n  return {\n    type: 'MODAL_OPENNED',\n    payload: bookId\n  }\n}\n\nexport const modalClosed = () => {\n  return {\n    type: 'MODAL_CLOSED',\n  }\n}\n\nexport const bookCountChanged = (count) => {\n  return {\n    type: 'BOOK_COUNT_CHANGED',\n    payload: count\n  }\n}\n","const compose = (...funcs) => (comp) => {\n  return funcs.reduceRight(\n    (wrapped, f) => f(wrapped), comp);\n};\n\nexport default compose;\n","import Spinner from './spinner';\n\nexport default Spinner;\n","import React from 'react';\nimport './spinner.css';\n\nconst Spinner = () => {\n  return (\n    <div className=\"spinner-wrapper\">\n      <div className=\"spinner\"></div>\n    </div>\n  );\n};\n\nexport default Spinner;\n","import ErrorIndicator from './error-indicator';\n\nexport default ErrorIndicator;\n","import React from 'react';\nimport './error-indicator.css';\n\nconst ErrorIndicator = () => {\n  return <div>Error!</div>;\n};\n\nexport default ErrorIndicator;\n","import React, { Component } from 'react';\nimport BookListItem from '../book-list-item';\n\nimport { connect } from 'react-redux';\n\nimport { withBookstoreService } from '../hoc';\nimport { fetchBooks, bookAddedToCart, modalOpenned } from '../../actions';\nimport { compose } from '../../utils';\n\nimport Spinner from '../spinner';\nimport ErrorIndicator from '../error-indicator';\n\nimport './book-list.css';\n\nconst BookList = ({ books, modalOpenned }) => {\n  return (\n    <ul className=\"book-list\">\n      {\n        books.map((book) => {\n          return (\n            <li key={book.id}>\n              <BookListItem\n                book={book}\n                onModalOpenned={() => modalOpenned(book.id)}/>\n            </li>\n          );\n        })\n      }\n    </ul>\n  );\n};\n\nclass BookListContainer extends Component {\n\n  componentDidMount() {\n    this.props.fetchBooks();\n  }\n\n  render() {\n    const { books, loading, error, modalOpenned } = this.props;\n\n    if (loading) {\n      return <Spinner />;\n    }\n\n    if (error) {\n      return <ErrorIndicator />;\n    }\n\n    return <BookList books={books} modalOpenned={modalOpenned}/>;\n  }\n}\n\nconst mapStateToProps = ({ books, loading, error, isModal }) => {\n  return { books, loading, error, isModal };\n};\n\nconst mapDispatchToProps = (dispatch, { bookstoreService }) => {\n  return {\n    fetchBooks: fetchBooks(bookstoreService, dispatch),\n    onAddedToCart: (id) => dispatch(bookAddedToCart(id)),\n    modalOpenned: (id) => dispatch(modalOpenned(id)),\n  };\n};\n\nexport default compose(\n  withBookstoreService(),\n  connect(mapStateToProps, mapDispatchToProps)\n)(BookListContainer);\n","import BookList from './book-list';\n\nexport default BookList;\n","import React from 'react';\nimport { connect } from 'react-redux';\n\nimport {\n  bookAddedToCart,\n  bookRemovedFromCart,\n  allBooksRemovedFromCart } from '../../actions';\n\nimport './shopping-cart-table.css';\n\nconst ShoppingCartTable = ({ items, total, onIncrease, onDecrease, onDelete }) => {\n  const renderRow = (item, idx) => {\n    const { id, title, count, total } = item;\n    return (\n      <tr key={id}>\n        <td>{idx + 1}</td>\n        <td>{title}</td>\n        <td>{count}</td>\n        <td>${total.toFixed(2)}</td>\n        <td>\n          <button\n            onClick={() => onDelete(id)}\n            className=\"btn btn-outline-danger btn-sm float-right\">\n            <i className=\"fa fa-trash-o\" />\n          </button>\n          <button\n            onClick={() => onIncrease(id)}\n            className=\"btn btn-outline-success btn-sm float-right\">\n            <i className=\"fa fa-plus-circle\" />\n          </button>\n          <button\n            onClick={() => onDecrease(id)}\n            className=\"btn btn-outline-warning btn-sm float-right\">\n            <i className=\"fa fa-minus-circle\" />\n          </button>\n        </td>\n      </tr>\n    );\n  };\n\n  return (\n    <div className=\"shopping-cart-table\">\n      <h2>Корзина</h2>\n      <table className=\"table\">\n        <thead>\n          <tr>\n            <th>#</th>\n            <th>Название</th>\n            <th>Количество</th>\n            <th>Цена</th>\n            <th>Действие</th>\n          </tr>\n        </thead>\n\n        <tbody>\n        { items.map(renderRow) }\n        </tbody>\n      </table>\n\n      <div className=\"total\">\n        Сумма: ${total.toFixed(2)}\n      </div>\n    </div>\n  );\n};\n\nconst mapStateToProps = ({ cartItems, orderTotal }) => {\n  return {\n    items: cartItems,\n    total: orderTotal\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onIncrease: (id) => dispatch(bookAddedToCart(id, 1)),\n    onDecrease: (id) => dispatch(bookRemovedFromCart(id)),\n    onDelete: (id) => dispatch(allBooksRemovedFromCart(id))\n  }\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ShoppingCartTable);\n","import React from 'react';\nimport BookList from '../book-list';\nimport ShoppingCartTable from '../shopping-cart-table/shopping-cart-table';\n\nconst HomePage = () => {\n  return (\n    <div>\n      <BookList />\n      <ShoppingCartTable />\n    </div>\n  );\n};\n\nexport default HomePage;\n","import ShoppingCartTable from './shopping-cart-table';\n\nexport default ShoppingCartTable;\n","import React from 'react';\nimport ShoppingCartTable from '../shopping-cart-table';\n\nconst CartPage = () => {\n  return <ShoppingCartTable />\n};\n\nexport default CartPage;\n","import React, { Component } from 'react';\r\nimport { Modal, Button } from 'react-bootstrap';\r\nimport NumericInput from 'react-numeric-input';\r\n\r\nimport './book-modal.css';\r\n\r\nimport { bookAddedToCart, bookCountChanged } from '../../actions';\r\n\r\nimport { connect } from 'react-redux';\r\n\r\nimport { modalClosed } from '../../actions';\r\n\r\nclass BookModal extends Component {\r\n\r\n    render() {\r\n        const { isModal, modalClosed, currentBook, currentCount, bookAddedToCart, bookCountChanged } = this.props;\r\n        return (\r\n            <>\r\n                <Modal show={isModal} onHide={modalClosed}>\r\n                    <Modal.Header closeButton>\r\n                    <Modal.Title>{currentBook.title}</Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body className=\"book-modal-body\">\r\n                        <img src={currentBook.image} alt={currentBook.title}/>\r\n                        <p>{currentBook.subtitle}</p>\r\n                        <div className=\"count-of-book\">\r\n                            <NumericInput min={0} value={currentCount} onChange={(count) => bookCountChanged(count)}/>\r\n                            <span>Количество книг</span>\r\n                        </div>\r\n                    </Modal.Body>\r\n                    <Modal.Footer>\r\n                    <Button variant=\"primary\" onClick={()=> bookAddedToCart(currentBook.id, currentCount)}>\r\n                        Добавить в корзину\r\n                    </Button>\r\n                    <Button variant=\"secondary\" onClick={modalClosed}>\r\n                        Закрыть\r\n                    </Button>\r\n                    </Modal.Footer>\r\n                </Modal>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = ({ isModal, currentBook, currentCount }) => {\r\n    return {\r\n        isModal,\r\n        currentBook,\r\n        currentCount\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        modalClosed: () => dispatch(modalClosed()),\r\n        bookAddedToCart: (id, count) => {\r\n            dispatch(bookAddedToCart(id, count));\r\n            dispatch(modalClosed());\r\n        },\r\n        bookCountChanged: (count) => dispatch(bookCountChanged(count))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(BookModal);","import Modal from './book-modal';\r\nexport default Modal;","import App from './app';\n\nexport default App;\n","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport ShopHeader from '../shop-header';\nimport { HomePage, CartPage } from '../pages';\nimport Modal from '../book-modal';\n\nimport './app.css';\n\nconst App = () => {\n  return (\n    <main role=\"main\" className=\"container\">\n      <ShopHeader numItems={5} total={210}/>\n      <Switch>\n        <Route\n          path=\"/BooksShopTest\"\n          component={HomePage}\n          exact />\n\n        <Route\n          path=\"/BooksShopTest/cart\"\n          component={CartPage}\n          />\n      </Switch>\n      <Modal/>\n    </main>\n  );\n};\n\nexport default App;\n","import ErrorBoundry from './error-boundry';\n\nexport default ErrorBoundry;\n","import React, { Component } from 'react';\nimport ErrorIndicator from '../error-indicator';\n\nexport default class ErrorBoundry extends Component {\n\n  state = {\n    hasError: false\n  };\n\n  componentDidCatch() {\n    this.setState({ hasError: true });\n  }\n\n  render() {\n    if (this.state.hasError) {\n      return <ErrorIndicator />;\n    }\n\n    return this.props.children;\n  }\n}","\nconst initialState = {\n  books: [], // Массив книг\n  loading: true, // Флаг загрузки чтобы показать спинер\n  error: null, // Флаг ошибки при загрузке книг с помощью fetch api\n  cartItems: [], // Корзина (массив обектов { id, title, total, count})\n  orderTotal: 0, // Сумма покупки\n  orderCount: 0, // Всего книг в корзине\n  isModal: false, // Флаг открыто ли модальное окно\n  currentBook: {}, // Текущая книга которая открыта в модальном окне\n  currentCount: 0 // Количество книг для покупки в модальном окне\n};\n\n\n// Функция которая добавляет / удаляет / обновляет книги в корзине\nconst updateCartItems = (cartItems, item, idx) => {\n\n  if (item.count === 0) { // Если мы книг в корзине не осталось то удаляем объект из корзины\n    return [\n      ...cartItems.slice(0, idx),\n      ...cartItems.slice(idx + 1)\n    ];\n  }\n\n  if (idx === -1) { // Если книги в корзине нет то добавляем\n    return [\n      ...cartItems,\n      item\n    ];\n  }\n\n  return [ // В остальных случаях обновляем книгу в корзине\n    ...cartItems.slice(0, idx),\n    item,\n    ...cartItems.slice(idx + 1)\n  ];\n};\n\n\n// Функция которая создает новый объект для корзины\n// quantity - количество книг которые мы добавляем\n// book - книга из общей БД, item - книга из корзины\nconst updateCartItem = (book, item = {}, quantity) => {\n\n  // Если книги нет в корзине то берем id и title из book в БД\n  // А количество и сумму берем за 0\n  const {\n    id = book.id,\n    count = 0,\n    title = book.title,\n    total = 0 } = item;\n\n  // Расчитываем количество и сумму\n  return {\n    id,\n    title,\n    count: count + quantity,\n    total: total + quantity*book.price\n  };\n};\n\n// Обновление заказа\nconst updateOrder = (state, bookId, quantity) => {\n  const { books, cartItems } = state;\n\n  // Находим выбранную книгу в корзине и в БД\n  const book = books.find(({id}) => id === bookId);\n  const itemIndex = cartItems.findIndex(({id}) => id === bookId);\n  const item = cartItems[itemIndex];\n\n  // Обновляем корзину в зависимости от quantity\n  const newItem = updateCartItem(book, item, quantity);\n  const updatedCartItems = updateCartItems(cartItems, newItem, itemIndex);\n\n  // Расчитываем количество книг и сумму в корзине\n  const orderTotal = updatedCartItems.reduce((acc,cur)=>acc+cur.total,0);\n  const orderCount = updatedCartItems.reduce((acc,cur)=>acc+cur.count,0);\n\n  return {\n    ...state,\n    cartItems: updatedCartItems,\n    orderTotal,\n    orderCount\n  };\n};\n\nconst reducer = (state = initialState, action) => {\n\n  switch (action.type) {\n    case 'FETCH_BOOKS_REQUEST':\n      return {\n        ...state,\n        books: [],\n        loading: true,\n        error: null\n      };\n\n    case 'FETCH_BOOKS_SUCCESS':\n      return {\n        ...state,\n        books: action.payload,\n        loading: false,\n        error: null\n      };\n\n    case 'FETCH_BOOKS_FAILURE':\n      return {\n        ...state,\n        books: [],\n        loading: false,\n        error: action.payload\n      };\n\n    case 'BOOK_ADDED_TO_CART':\n      return updateOrder(state, action.payload.bookId, action.payload.count);\n\n    case 'BOOK_REMOVED_FROM_CART':\n      return updateOrder(state, action.payload, -1);\n\n    case 'ALL_BOOKS_REMOVED_FROM_CART':\n      const item = state.cartItems.find(({id}) => id === action.payload);\n      return updateOrder(state, action.payload, -item.count);\n\n    case 'MODAL_OPENNED':\n      const curBook = state.books.find((book)=> book.id === action.payload);\n      return {\n        ...state,\n        isModal: true,\n        currentBook: curBook\n      }\n\n    case 'MODAL_CLOSED':\n      return {\n        ...state,\n        isModal: false,\n        currentBook: {},\n        currentCount: 0\n      }\n\n    case 'BOOK_COUNT_CHANGED':\n      return {\n        ...state,\n        currentCount: action.payload\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","import { createStore } from 'redux';\n\nimport reducer from './reducers';\n\nconst store = createStore(reducer);\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nimport App from './components/app';\nimport ErrorBoundry from './components/error-boundry';\nimport BookstoreService from './services/bookstore-service';\nimport { BookstoreServiceProvider } from './components/bookstore-service-context';\n\nimport store from './store';\n\nconst bookstoreService = new BookstoreService();\n\nReactDOM.render(\n  <Provider store={store}>\n    <ErrorBoundry>\n      <BookstoreServiceProvider value={bookstoreService}>\n        <Router>\n          <App />\n        </Router>\n      </BookstoreServiceProvider>\n    </ErrorBoundry>\n  </Provider>,\n  document.getElementById('root')\n);","\nexport default class BookstoreService {\n\n  getBooks = async () => {\n    const res = await fetch(\"http://5d22b7fd4e05c600146ef4dd.mockapi.io/cupcake/books\");\n    const json = await res.json();\n    return json.books.map(this.mapResToBook);\n  }\n\n  mapResToBook = (book) => {\n    return {\n      id: book.isbn13,\n      title: book.title,\n      image: book.image,\n      price: book.price,\n      subtitle: book.subtitle,\n      url: book.url\n    }\n  }\n}"],"sourceRoot":""}